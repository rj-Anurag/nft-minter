"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@solana+wallet-standard-wallet-adapter-base@1.1.4_@solana+web3.js@1.98.2_bufferutil@4.0_bc788d935846ffd22cd8c9c87ab2ba17";
exports.ids = ["vendor-chunks/@solana+wallet-standard-wallet-adapter-base@1.1.4_@solana+web3.js@1.98.2_bufferutil@4.0_bc788d935846ffd22cd8c9c87ab2ba17"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@solana+wallet-standard-wallet-adapter-base@1.1.4_@solana+web3.js@1.98.2_bufferutil@4.0_bc788d935846ffd22cd8c9c87ab2ba17/node_modules/@solana/wallet-standard-wallet-adapter-base/lib/esm/adapter.js":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solana+wallet-standard-wallet-adapter-base@1.1.4_@solana+web3.js@1.98.2_bufferutil@4.0_bc788d935846ffd22cd8c9c87ab2ba17/node_modules/@solana/wallet-standard-wallet-adapter-base/lib/esm/adapter.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardWalletAdapter: () => (/* binding */ StandardWalletAdapter)\n/* harmony export */ });\n/* harmony import */ var _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-adapter-base */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-adapter-base@0.9.26_@solana+web3.js@1.98.2_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@5.0.10_/node_modules/@solana/wallet-adapter-base/lib/esm/adapter.js\");\n/* harmony import */ var _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-adapter-base */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-adapter-base@0.9.26_@solana+web3.js@1.98.2_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@5.0.10_/node_modules/@solana/wallet-adapter-base/lib/esm/errors.js\");\n/* harmony import */ var _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @solana/wallet-adapter-base */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-adapter-base@0.9.26_@solana+web3.js@1.98.2_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@5.0.10_/node_modules/@solana/wallet-adapter-base/lib/esm/transaction.js\");\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-features@1.3.0/node_modules/@solana/wallet-standard-features/lib/esm/signAndSendTransaction.js\");\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-features@1.3.0/node_modules/@solana/wallet-standard-features/lib/esm/signTransaction.js\");\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-features@1.3.0/node_modules/@solana/wallet-standard-features/lib/esm/signMessage.js\");\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-features@1.3.0/node_modules/@solana/wallet-standard-features/lib/esm/signIn.js\");\n/* harmony import */ var _solana_wallet_standard_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @solana/wallet-standard-util */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-util@1.1.2/node_modules/@solana/wallet-standard-util/lib/esm/endpoint.js\");\n/* harmony import */ var _solana_wallet_standard_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @solana/wallet-standard-util */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-standard-util@1.1.2/node_modules/@solana/wallet-standard-util/lib/esm/commitment.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/.pnpm/@solana+web3.js@1.98.2_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@5.0.10/node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _wallet_standard_features__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wallet-standard/features */ \"(ssr)/./node_modules/.pnpm/@wallet-standard+features@1.1.0/node_modules/@wallet-standard/features/lib/esm/events.js\");\n/* harmony import */ var _wallet_standard_features__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @wallet-standard/features */ \"(ssr)/./node_modules/.pnpm/@wallet-standard+features@1.1.0/node_modules/@wallet-standard/features/lib/esm/disconnect.js\");\n/* harmony import */ var _wallet_standard_features__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @wallet-standard/features */ \"(ssr)/./node_modules/.pnpm/@wallet-standard+features@1.1.0/node_modules/@wallet-standard/features/lib/esm/connect.js\");\n/* harmony import */ var _wallet_standard_wallet__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @wallet-standard/wallet */ \"(ssr)/./node_modules/.pnpm/@wallet-standard+wallet@1.1.0/node_modules/@wallet-standard/wallet/lib/esm/util.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/.pnpm/bs58@5.0.0/node_modules/bs58/index.js\");\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _StandardWalletAdapter_instances, _StandardWalletAdapter_account, _StandardWalletAdapter_publicKey, _StandardWalletAdapter_connecting, _StandardWalletAdapter_disconnecting, _StandardWalletAdapter_off, _StandardWalletAdapter_supportedTransactionVersions, _StandardWalletAdapter_wallet, _StandardWalletAdapter_readyState, _StandardWalletAdapter_connect, _StandardWalletAdapter_connected, _StandardWalletAdapter_disconnected, _StandardWalletAdapter_reset, _StandardWalletAdapter_changed, _StandardWalletAdapter_signTransaction, _StandardWalletAdapter_signAllTransactions, _StandardWalletAdapter_signMessage, _StandardWalletAdapter_signIn;\n\n\n\n\n\n\n\n/** TODO: docs */ class StandardWalletAdapter extends _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_2__.BaseWalletAdapter {\n    get name() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").name;\n    }\n    get url() {\n        return \"https://github.com/solana-labs/wallet-standard\";\n    }\n    get icon() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").icon;\n    }\n    get readyState() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_readyState, \"f\");\n    }\n    get publicKey() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_publicKey, \"f\");\n    }\n    get connecting() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_connecting, \"f\");\n    }\n    get supportedTransactionVersions() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_supportedTransactionVersions, \"f\");\n    }\n    get wallet() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\");\n    }\n    get standard() {\n        return true;\n    }\n    constructor({ wallet }){\n        super();\n        _StandardWalletAdapter_instances.add(this);\n        _StandardWalletAdapter_account.set(this, void 0);\n        _StandardWalletAdapter_publicKey.set(this, void 0);\n        _StandardWalletAdapter_connecting.set(this, void 0);\n        _StandardWalletAdapter_disconnecting.set(this, void 0);\n        _StandardWalletAdapter_off.set(this, void 0);\n        _StandardWalletAdapter_supportedTransactionVersions.set(this, void 0);\n        _StandardWalletAdapter_wallet.set(this, void 0);\n        _StandardWalletAdapter_readyState.set(this,  true ? _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_2__.WalletReadyState.Unsupported : 0);\n        _StandardWalletAdapter_changed.set(this, (properties)=>{\n            // If accounts have changed on the wallet, reflect this on the adapter.\n            if (\"accounts\" in properties) {\n                const account = __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").accounts[0];\n                // If the adapter isn't connected, or is disconnecting, or the first account hasn't changed, do nothing.\n                if (__classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\") && !__classPrivateFieldGet(this, _StandardWalletAdapter_disconnecting, \"f\") && account !== __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\")) {\n                    // If there's a connected account, connect the adapter. Otherwise, disconnect it.\n                    if (account) {\n                        // Connect the adapter.\n                        __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connected).call(this, account);\n                    } else {\n                        // Emit an error because the wallet spontaneously disconnected.\n                        this.emit(\"error\", new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletDisconnectedError());\n                        // Disconnect the adapter.\n                        __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_disconnected).call(this);\n                    }\n                }\n            }\n            // After reflecting account changes, if features have changed on the wallet, reflect this on the adapter.\n            if (\"features\" in properties) {\n                __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_reset).call(this);\n            }\n        });\n        __classPrivateFieldSet(this, _StandardWalletAdapter_wallet, wallet, \"f\");\n        __classPrivateFieldSet(this, _StandardWalletAdapter_account, null, \"f\");\n        __classPrivateFieldSet(this, _StandardWalletAdapter_publicKey, null, \"f\");\n        __classPrivateFieldSet(this, _StandardWalletAdapter_connecting, false, \"f\");\n        __classPrivateFieldSet(this, _StandardWalletAdapter_disconnecting, false, \"f\");\n        __classPrivateFieldSet(this, _StandardWalletAdapter_off, __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_wallet_standard_features__WEBPACK_IMPORTED_MODULE_4__.StandardEvents].on(\"change\", __classPrivateFieldGet(this, _StandardWalletAdapter_changed, \"f\")), \"f\");\n        __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_reset).call(this);\n    }\n    destroy() {\n        __classPrivateFieldSet(this, _StandardWalletAdapter_account, null, \"f\");\n        __classPrivateFieldSet(this, _StandardWalletAdapter_publicKey, null, \"f\");\n        __classPrivateFieldSet(this, _StandardWalletAdapter_connecting, false, \"f\");\n        __classPrivateFieldSet(this, _StandardWalletAdapter_disconnecting, false, \"f\");\n        const off = __classPrivateFieldGet(this, _StandardWalletAdapter_off, \"f\");\n        if (off) {\n            __classPrivateFieldSet(this, _StandardWalletAdapter_off, null, \"f\");\n            off();\n        }\n    }\n    async autoConnect() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connect).call(this, {\n            silent: true\n        });\n    }\n    async connect() {\n        return __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connect).call(this);\n    }\n    async disconnect() {\n        if (_wallet_standard_features__WEBPACK_IMPORTED_MODULE_5__.StandardDisconnect in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n            try {\n                __classPrivateFieldSet(this, _StandardWalletAdapter_disconnecting, true, \"f\");\n                await __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_wallet_standard_features__WEBPACK_IMPORTED_MODULE_5__.StandardDisconnect].disconnect();\n            } catch (error) {\n                this.emit(\"error\", new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletDisconnectionError(error?.message, error));\n            } finally{\n                __classPrivateFieldSet(this, _StandardWalletAdapter_disconnecting, false, \"f\");\n            }\n        }\n        __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_disconnected).call(this);\n    }\n    async sendTransaction(transaction, connection, options = {}) {\n        try {\n            const account = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\");\n            if (!account) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletNotConnectedError();\n            let feature;\n            if (_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_6__.SolanaSignAndSendTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n                if (account.features.includes(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_6__.SolanaSignAndSendTransaction)) {\n                    feature = _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_6__.SolanaSignAndSendTransaction;\n                } else if (_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features && account.features.includes(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction)) {\n                    feature = _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction;\n                } else {\n                    throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletAccountError();\n                }\n            } else if (_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n                if (!account.features.includes(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletAccountError();\n                feature = _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction;\n            } else {\n                throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletConfigError();\n            }\n            const chain = (0,_solana_wallet_standard_util__WEBPACK_IMPORTED_MODULE_8__.getChainForEndpoint)(connection.rpcEndpoint);\n            if (!account.chains.includes(chain)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletSendTransactionError();\n            try {\n                const { signers, ...sendOptions } = options;\n                let serializedTransaction;\n                if ((0,_solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_9__.isVersionedTransaction)(transaction)) {\n                    signers?.length && transaction.sign(signers);\n                    serializedTransaction = transaction.serialize();\n                } else {\n                    transaction = await this.prepareTransaction(transaction, connection, sendOptions);\n                    signers?.length && transaction.partialSign(...signers);\n                    serializedTransaction = new Uint8Array(transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false\n                    }));\n                }\n                if (feature === _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_6__.SolanaSignAndSendTransaction) {\n                    const [output] = await __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_6__.SolanaSignAndSendTransaction].signAndSendTransaction({\n                        account,\n                        chain,\n                        transaction: serializedTransaction,\n                        options: {\n                            preflightCommitment: (0,_solana_wallet_standard_util__WEBPACK_IMPORTED_MODULE_10__.getCommitment)(sendOptions.preflightCommitment || connection.commitment),\n                            skipPreflight: sendOptions.skipPreflight,\n                            maxRetries: sendOptions.maxRetries,\n                            minContextSlot: sendOptions.minContextSlot\n                        }\n                    });\n                    return bs58__WEBPACK_IMPORTED_MODULE_1__.encode(output.signature);\n                } else {\n                    const [output] = await __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction].signTransaction({\n                        account,\n                        chain,\n                        transaction: serializedTransaction,\n                        options: {\n                            preflightCommitment: (0,_solana_wallet_standard_util__WEBPACK_IMPORTED_MODULE_10__.getCommitment)(sendOptions.preflightCommitment || connection.commitment),\n                            minContextSlot: sendOptions.minContextSlot\n                        }\n                    });\n                    return await connection.sendRawTransaction(output.signedTransaction, {\n                        ...sendOptions,\n                        preflightCommitment: (0,_solana_wallet_standard_util__WEBPACK_IMPORTED_MODULE_10__.getCommitment)(sendOptions.preflightCommitment || connection.commitment)\n                    });\n                }\n            } catch (error) {\n                if (error instanceof _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletError) throw error;\n                throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletSendTransactionError(error?.message, error);\n            }\n        } catch (error) {\n            this.emit(\"error\", error);\n            throw error;\n        }\n    }\n}\n_StandardWalletAdapter_account = new WeakMap(), _StandardWalletAdapter_publicKey = new WeakMap(), _StandardWalletAdapter_connecting = new WeakMap(), _StandardWalletAdapter_disconnecting = new WeakMap(), _StandardWalletAdapter_off = new WeakMap(), _StandardWalletAdapter_supportedTransactionVersions = new WeakMap(), _StandardWalletAdapter_wallet = new WeakMap(), _StandardWalletAdapter_readyState = new WeakMap(), _StandardWalletAdapter_changed = new WeakMap(), _StandardWalletAdapter_instances = new WeakSet(), _StandardWalletAdapter_connect = async function _StandardWalletAdapter_connect(input) {\n    try {\n        if (this.connected || this.connecting) return;\n        if (__classPrivateFieldGet(this, _StandardWalletAdapter_readyState, \"f\") !== _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_2__.WalletReadyState.Installed) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletNotReadyError();\n        __classPrivateFieldSet(this, _StandardWalletAdapter_connecting, true, \"f\");\n        if (!__classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").accounts.length) {\n            try {\n                await __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_wallet_standard_features__WEBPACK_IMPORTED_MODULE_11__.StandardConnect].connect(input);\n            } catch (error) {\n                throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletConnectionError(error?.message, error);\n            }\n        }\n        const account = __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").accounts[0];\n        if (!account) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletAccountError();\n        __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connected).call(this, account);\n    } catch (error) {\n        this.emit(\"error\", error);\n        throw error;\n    } finally{\n        __classPrivateFieldSet(this, _StandardWalletAdapter_connecting, false, \"f\");\n    }\n}, _StandardWalletAdapter_connected = function _StandardWalletAdapter_connected(account) {\n    let publicKey;\n    try {\n        // Use account.address instead of account.publicKey since address could be a PDA\n        publicKey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(account.address);\n    } catch (error) {\n        throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletPublicKeyError(error?.message, error);\n    }\n    __classPrivateFieldSet(this, _StandardWalletAdapter_account, account, \"f\");\n    __classPrivateFieldSet(this, _StandardWalletAdapter_publicKey, publicKey, \"f\");\n    __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_reset).call(this);\n    this.emit(\"connect\", publicKey);\n}, _StandardWalletAdapter_disconnected = function _StandardWalletAdapter_disconnected() {\n    __classPrivateFieldSet(this, _StandardWalletAdapter_account, null, \"f\");\n    __classPrivateFieldSet(this, _StandardWalletAdapter_publicKey, null, \"f\");\n    __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_reset).call(this);\n    this.emit(\"disconnect\");\n}, _StandardWalletAdapter_reset = function _StandardWalletAdapter_reset() {\n    const supportedTransactionVersions = _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_6__.SolanaSignAndSendTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features ? __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_6__.SolanaSignAndSendTransaction].supportedTransactionVersions : __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction].supportedTransactionVersions;\n    __classPrivateFieldSet(this, _StandardWalletAdapter_supportedTransactionVersions, (0,_wallet_standard_wallet__WEBPACK_IMPORTED_MODULE_12__.arraysEqual)(supportedTransactionVersions, [\n        \"legacy\"\n    ]) ? null : new Set(supportedTransactionVersions), \"f\");\n    if (_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features && __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\")?.features.includes(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction)) {\n        this.signTransaction = __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_signTransaction);\n        this.signAllTransactions = __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_signAllTransactions);\n    } else {\n        delete this.signTransaction;\n        delete this.signAllTransactions;\n    }\n    if (_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_13__.SolanaSignMessage in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features && __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\")?.features.includes(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_13__.SolanaSignMessage)) {\n        this.signMessage = __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_signMessage);\n    } else {\n        delete this.signMessage;\n    }\n    if (_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_14__.SolanaSignIn in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n        this.signIn = __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_signIn);\n    } else {\n        delete this.signIn;\n    }\n}, _StandardWalletAdapter_signTransaction = async function _StandardWalletAdapter_signTransaction(transaction) {\n    try {\n        const account = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\");\n        if (!account) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletNotConnectedError();\n        if (!(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletConfigError();\n        if (!account.features.includes(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletAccountError();\n        try {\n            const signedTransactions = await __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction].signTransaction({\n                account,\n                transaction: (0,_solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_9__.isVersionedTransaction)(transaction) ? transaction.serialize() : new Uint8Array(transaction.serialize({\n                    requireAllSignatures: false,\n                    verifySignatures: false\n                }))\n            });\n            const serializedTransaction = signedTransactions[0].signedTransaction;\n            return (0,_solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_9__.isVersionedTransaction)(transaction) ? _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(serializedTransaction) : _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(serializedTransaction);\n        } catch (error) {\n            if (error instanceof _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletError) throw error;\n            throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletSignTransactionError(error?.message, error);\n        }\n    } catch (error) {\n        this.emit(\"error\", error);\n        throw error;\n    }\n}, _StandardWalletAdapter_signAllTransactions = async function _StandardWalletAdapter_signAllTransactions(transactions) {\n    try {\n        const account = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\");\n        if (!account) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletNotConnectedError();\n        if (!(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletConfigError();\n        if (!account.features.includes(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletAccountError();\n        try {\n            const signedTransactions = await __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_7__.SolanaSignTransaction].signTransaction(...transactions.map((transaction)=>({\n                    account,\n                    transaction: (0,_solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_9__.isVersionedTransaction)(transaction) ? transaction.serialize() : new Uint8Array(transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false\n                    }))\n                })));\n            return transactions.map((transaction, index)=>{\n                const signedTransaction = signedTransactions[index].signedTransaction;\n                return (0,_solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_9__.isVersionedTransaction)(transaction) ? _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(signedTransaction) : _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(signedTransaction);\n            });\n        } catch (error) {\n            throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletSignTransactionError(error?.message, error);\n        }\n    } catch (error) {\n        this.emit(\"error\", error);\n        throw error;\n    }\n}, _StandardWalletAdapter_signMessage = async function _StandardWalletAdapter_signMessage(message) {\n    try {\n        const account = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\");\n        if (!account) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletNotConnectedError();\n        if (!(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_13__.SolanaSignMessage in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletConfigError();\n        if (!account.features.includes(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_13__.SolanaSignMessage)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletAccountError();\n        try {\n            const signedMessages = await __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_13__.SolanaSignMessage].signMessage({\n                account,\n                message\n            });\n            return signedMessages[0].signature;\n        } catch (error) {\n            throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletSignMessageError(error?.message, error);\n        }\n    } catch (error) {\n        this.emit(\"error\", error);\n        throw error;\n    }\n}, _StandardWalletAdapter_signIn = async function _StandardWalletAdapter_signIn(input = {}) {\n    try {\n        if (!(_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_14__.SolanaSignIn in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features)) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletConfigError();\n        let output;\n        try {\n            [output] = await __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[_solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_14__.SolanaSignIn].signIn(input);\n        } catch (error) {\n            throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletSignInError(error?.message, error);\n        }\n        if (!output) throw new _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_3__.WalletSignInError();\n        __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connected).call(this, output.account);\n        return output;\n    } catch (error) {\n        this.emit(\"error\", error);\n        throw error;\n    }\n}; //# sourceMappingURL=adapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solana+wallet-standard-wallet-adapter-base@1.1.4_@solana+web3.js@1.98.2_bufferutil@4.0_bc788d935846ffd22cd8c9c87ab2ba17/node_modules/@solana/wallet-standard-wallet-adapter-base/lib/esm/adapter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@solana+wallet-standard-wallet-adapter-base@1.1.4_@solana+web3.js@1.98.2_bufferutil@4.0_bc788d935846ffd22cd8c9c87ab2ba17/node_modules/@solana/wallet-standard-wallet-adapter-base/lib/esm/types.js":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solana+wallet-standard-wallet-adapter-base@1.1.4_@solana+web3.js@1.98.2_bufferutil@4.0_bc788d935846ffd22cd8c9c87ab2ba17/node_modules/@solana/wallet-standard-wallet-adapter-base/lib/esm/types.js ***!
  \*******************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isWalletAdapterCompatibleWallet: () => (/* binding */ isWalletAdapterCompatibleWallet)\n/* harmony export */ });\n/* harmony import */ var _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/wallet-adapter-base */ \"(ssr)/./node_modules/.pnpm/@solana+wallet-adapter-base@0.9.26_@solana+web3.js@1.98.2_bufferutil@4.0.9_typescript@5.8.3_utf-8-validate@5.0.10_/node_modules/@solana/wallet-adapter-base/lib/esm/standard.js\");\n\n/**\n * @deprecated Use `isWalletAdapterCompatibleStandardWallet` from `@solana/wallet-adapter-base` instead.\n *\n * @group Deprecated\n */ const isWalletAdapterCompatibleWallet = _solana_wallet_adapter_base__WEBPACK_IMPORTED_MODULE_0__.isWalletAdapterCompatibleStandardWallet; //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGFuYSt3YWxsZXQtc3RhbmRhcmQtd2FsbGV0LWFkYXB0ZXItYmFzZUAxLjEuNF9Ac29sYW5hK3dlYjMuanNAMS45OC4yX2J1ZmZlcnV0aWxANC4wX2JjNzg4ZDkzNTg0NmZmZDIyY2Q4YzljODdhYjJiYTE3L25vZGVfbW9kdWxlcy9Ac29sYW5hL3dhbGxldC1zdGFuZGFyZC13YWxsZXQtYWRhcHRlci1iYXNlL2xpYi9lc20vdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUY7QUFDdkY7Ozs7Q0FJQyxHQUNNLE1BQU1DLGtDQUFrQ0QsZ0dBQXVDQSxDQUFDLENBQ3ZGLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNvbGFuYSt3YWxsZXQtc3RhbmRhcmQtd2FsbGV0LWFkYXB0ZXItYmFzZUAxLjEuNF9Ac29sYW5hK3dlYjMuanNAMS45OC4yX2J1ZmZlcnV0aWxANC4wX2JjNzg4ZDkzNTg0NmZmZDIyY2Q4YzljODdhYjJiYTE3L25vZGVfbW9kdWxlcy9Ac29sYW5hL3dhbGxldC1zdGFuZGFyZC13YWxsZXQtYWRhcHRlci1iYXNlL2xpYi9lc20vdHlwZXMuanM/NjE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1dhbGxldEFkYXB0ZXJDb21wYXRpYmxlU3RhbmRhcmRXYWxsZXQsIH0gZnJvbSAnQHNvbGFuYS93YWxsZXQtYWRhcHRlci1iYXNlJztcbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGBpc1dhbGxldEFkYXB0ZXJDb21wYXRpYmxlU3RhbmRhcmRXYWxsZXRgIGZyb20gYEBzb2xhbmEvd2FsbGV0LWFkYXB0ZXItYmFzZWAgaW5zdGVhZC5cbiAqXG4gKiBAZ3JvdXAgRGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgaXNXYWxsZXRBZGFwdGVyQ29tcGF0aWJsZVdhbGxldCA9IGlzV2FsbGV0QWRhcHRlckNvbXBhdGlibGVTdGFuZGFyZFdhbGxldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJpc1dhbGxldEFkYXB0ZXJDb21wYXRpYmxlU3RhbmRhcmRXYWxsZXQiLCJpc1dhbGxldEFkYXB0ZXJDb21wYXRpYmxlV2FsbGV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solana+wallet-standard-wallet-adapter-base@1.1.4_@solana+web3.js@1.98.2_bufferutil@4.0_bc788d935846ffd22cd8c9c87ab2ba17/node_modules/@solana/wallet-standard-wallet-adapter-base/lib/esm/types.js\n");

/***/ })

};
;