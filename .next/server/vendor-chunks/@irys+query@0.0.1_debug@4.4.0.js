"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@irys+query@0.0.1_debug@4.4.0";
exports.ids = ["vendor-chunks/@irys+query@0.0.1_debug@4.4.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/graphql.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/graphql.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLQuery: () => (/* binding */ GraphQLQuery)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/.pnpm/axios@1.9.0_debug@4.4.0/node_modules/axios/lib/axios.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var async_retry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! async-retry */ \"(ssr)/./node_modules/.pnpm/async-retry@1.3.3/node_modules/async-retry/lib/index.js\");\n\n\n\n// GraphQL query builder class, uses overload signatures to modify class generics to provide concise typings for any configured query\n// this approach does mean (atm anyway) we need to explicitly coerce return types to the correct \"shape\", but as most of the methods are dynamic, this isn't much of an issue.\n// TODO: look into constructor facade pattern - https://gist.github.com/kourge/9715e0dd59c28e776fb598d407636106\n// TODO: look into https://discord.com/channels/508357248330760243/1122523559097548870\n/**\n * GraphQL query class - encapsulates all logic, types, and methods required to resolve queries\n */ class GraphQLQuery {\n    constructor({ url, retryConfig, query, queryName, opts }){\n        /* implements BuilderMethods<TVars, GraphQLQuery<TQuery, TVars, TReturn>> */ // query variables\n        this.queryVars = {};\n        // result tracker object, used to hold state for paging operations\n        this.resultTracker = {\n            numPages: 0,\n            numResults: 0,\n            done: false\n        };\n        if (!url) throw new Error(\"URL is required\");\n        this.url = new URL(url);\n        this.config = {\n            first: false,\n            userProvided: false,\n            numPages: Infinity,\n            numResults: 1000,\n            retryOpts: {\n                retries: 3,\n                maxTimeout: 2000,\n                minTimeout: 500,\n                ...retryConfig\n            }\n        };\n        if (query === false) return this;\n        if (!query) throw new Error(`Unable to find query with name ${queryName}`);\n        this.queryInfo = {\n            ...query\n        };\n        this.queryFields = query.query;\n        if (queryName.includes(\"arweave\") && this.url.host === \"node1.bundlr.network\") this.url = new URL(\"https://arweave.net/graphql\");\n        if (!opts?.skipVariableSetters) {\n            // generate dynamic variable setter builder methods\n            for (const k of Object.keys(query.vars)){\n                if (this[k]) throw new Error(`Field setter ${k} has a key conflict - disable with opts.skipVariableSetters OR change the field name and add to query.remapVars`);\n                this[k] = (value)=>{\n                    this.queryVars[k] = value;\n                    return this;\n                };\n            }\n        }\n        return this;\n    }\n    /**\n     * Builds a query from fields and variables, formatting it into a GQL compatible string.\n     * stores built query under `this.query` (protected) - accessible via `.toQuery`\n     * @returns `this` (chainable)\n     */ buildQuery() {\n        // @ts-expect-error overloading\n        if (this.config.userProvided) return this; // don't build if it's a user provided query string\n        // builds query, reducing `this.queryFields` to a structured string with correct formatting\n        const toGQLString = (s)=>JSON.stringify(s, (_, v)=>{\n                if (v instanceof Array) return v[0]; /* JSON.stringify(v); */ \n                if (typeof v === \"object\") return v;\n                if (v === false) return undefined;\n                return \"\";\n            }).replaceAll(`:`, \"\").replaceAll(`\"`, \"\").replaceAll(\",\", \"\\n          \");\n        const nodeQuery = toGQLString(this.queryFields);\n        // the hasNextPage field can vary\n        const pageInfo = toGQLString({\n            pageInfo: {\n                [this.queryInfo.paging?.hasNextPage ?? \"hasNextPage\"]: undefined\n            }\n        }).slice(1, -1); // remove leading \"{\" and finishing \"}\"\n        const enumValues = this.queryInfo.enumValues;\n        // incorporates defaults from queryInfo\n        const vars = {\n            ...this.queryInfo.vars,\n            ...this.queryVars\n        };\n        // remap keys - primarily done to prevent conflicts with builder methods.\n        // {limit: \"first\"} -> remaps `limit` variable to `first` variable\n        // {limit: (k,v) => [\"first\",v]} does the same thing\n        for (const [k, v] of Object.entries(this.queryInfo.remapVars ?? {})){\n            if (vars?.[k] === undefined) continue;\n            if (typeof v === \"function\") {\n                // provided mapper fn\n                const m = v(k, vars[k], vars);\n                if (!m) continue;\n                const [nk, nv] = m;\n                vars[nk] = nv;\n                if (nk === k) continue; // don't null out key if it's the same key\n            } else {\n                vars[v] = vars[k];\n            }\n            vars[k] = undefined; // null keys are removed below\n        }\n        // reduces queryVars to inline vars, for convenience. (using separate means we have to annotate the GQL type)\n        const qVars = JSON.stringify(vars, function(k, v) {\n            // console.log(this, k, v);\n            if (v === undefined) return v; // remove null keys\n            if (v instanceof Array) return v; // don't break recursion\n            if (typeof v === \"object\") return v; // ^\n            if (typeof v === \"number\") return v; // numbers don't need string escaping\n            // TODO: improve this so it's context aware and doesn't alter anything unintentional\n            // can probably do by logging key names into array if value is an object, popping when object is a primitive\n            if (enumValues?.includes(k)) return v; // exclude enum variants from quote addition\n            return `'${v}'`; // this value needs to be quote padded\n        }).replaceAll('\"', \"\") // remove double quotes,\n        .replaceAll(\"'\", '\"') // add needed double quotes\n        .slice(1, -1); // remove leading \"{\" and finishing \"}\"\n        if (!this?.queryInfo?.name) throw new Error(`Query name is undefined!`);\n        // discriminate based on whether the query is pageable\n        const query = this.queryInfo.paging ? `query {\n      ${this.queryInfo.name}(\n        ${qVars}\n      ) {\n        edges {\n          cursor\n          node ${nodeQuery}\n        }\n        ${pageInfo}\n      }\n    }` : `query {\n    ${this.queryInfo.name}(\n      ${qVars}\n    ) \n    ${nodeQuery}\n  }`;\n        this._query = query;\n        // @ts-expect-error types - DO NOT SET RETURN TYPE TO `this` - TS will assume this should be an async function as `this` implements promise methods\n        return this;\n    }\n    /**\n     * Primary query execution method - builds & runs the query, returning result nodes and updating cursor info in queryVars\n     * @returns query result nodes\n     */ async getPage() {\n        if (this.resultTracker.done) return undefined;\n        this.buildQuery();\n        if (!this._query) throw new Error(`Unable to run undefined query`);\n        let res;\n        try {\n            res = await async_retry__WEBPACK_IMPORTED_MODULE_1__(async (_)=>{\n                const r = await (0,axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.url.toString(), {\n                    method: \"post\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    data: {\n                        query: this._query\n                    }\n                });\n                if (r.data.errors) throw r;\n                return r;\n            }, this.config.retryOpts);\n        } catch (e) {\n            throw new Error(`Error running query\\n ${this._query} - ${e.message ? e.message + \" -\" : \"\"} (${JSON.stringify(e?.data?.errors.map((e)=>e.message) ?? e?.errors ?? e)}) `);\n        }\n        if (this.config.userProvided) return this.trimmer([\n            res.data.data\n        ].flat(20));\n        const data = res.data.data[this.queryInfo.name];\n        // if this is a pageable query if this is defined\n        if (this.queryInfo.paging) {\n            const nextCursor = data.pageInfo[this.queryInfo.paging.hasNextPage] ? data.edges.at(-1)[this.queryInfo.paging.cursor] : undefined;\n            this.queryVars.after = nextCursor;\n            return this.trimmer(data.edges.map((v)=>v.node));\n        }\n        return this.trimmer([\n            data\n        ].flat(20));\n    }\n    // tracks & controls output\n    trimmer(res) {\n        const numPages = ++this.resultTracker.numPages;\n        const numResults = this.resultTracker.numResults += res.length;\n        if (res.length === 0) {\n            this.resultTracker.done = true;\n            return res;\n        }\n        if (numPages >= this?.config?.numPages) this.resultTracker.done = true;\n        if (numResults >= this?.config?.numResults) {\n            this.resultTracker.done = true;\n            const delta = this.config.numResults - (numResults - res.length);\n            return res.slice(0, delta);\n        }\n        return res;\n    }\n    // return modifier functions\n    /**\n     * Get the first result from the query\n     * @returns the first result from the query - gets at maximum one page\n     */ async first() {\n        const res = await this.getPage();\n        return res?.at(0) ?? undefined;\n    }\n    /**\n     * Limiter on the number of pages a given query should resolve to\n     * @param numPages Maximum number of pages to return\n     * @returns this (chainable)\n     */ maxPages(numPages) {\n        this.config.numPages = numPages;\n        // @ts-expect-error types\n        return this;\n    }\n    /**\n     * Limiter on the maximum number of results a given query should resolve to\n     * @param numResults Maximum number of results to return\n     * @returns this (chainable)\n     */ limit(numResults) {\n        this.config.numResults = numResults;\n        // @ts-expect-error types\n        return this;\n    }\n    // return functions\n    /**\n     * Gets all results from the built query\n     * @returns array of results\n     */ async all() {\n        const results = [];\n        do {\n            const page = await this.getPage();\n            if (!page) break;\n            // @ts-expect-error types\n            results.push(...page);\n        }while (this.queryVars.after);\n        return results;\n    }\n    /**\n     * Async generator, yields individual query result items\n     */ async *generator() {\n        do {\n            const res = await this.getPage();\n            if (!res) return;\n            // @ts-expect-error constraints\n            for (const r of res)yield r;\n        }while (this.queryVars.after); // getPage sets after to undefined if there are no more pages\n    }\n    /**\n     * Readable stream produced from `this.generator`\n     * @returns a readable instance, with the \"data\" event yielding individual results\n     */ stream() {\n        return stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(this.generator());\n    }\n    /**\n     * Provide a custom query string to resolve\n     * @param query Query string to use\n     * @returns result of the query - this method does not support paging or extraction\n     */ query(query) {\n        this._query = query;\n        this.config.userProvided = true;\n        // @ts-expect-error overloading\n        return this;\n    }\n    // TODO issue: this allows for additional (top level only?!) fields that aren't part of TQuery - for now we perform JS level shape checks and throw.\n    /**\n     * Set the fields you want the query to return\n     * @param fields - Object structured like a graphql query body, truthy values including, falsy excluding\n     * @param skipFieldCheck - whether to skip JS level fields object shape validation\n     * @returns `this` (chainable)\n     */ fields(fields, skipFieldCheck = false) {\n        // validate provided fields against default fields\n        // default/allowed fields is under `this.queryFields`\n        // user selected fields are under `fields`\n        // path, allowed, user provided - it's flat so we don't need super precise comparision\n        const recursiveValidate = (p, a, b)=>{\n            for (const k of Object.keys(b)){\n                let ak = a[k];\n                if (Array.isArray(ak)) ak = ak[0];\n                const bk = b[k];\n                if (ak === undefined) throw new Error(`Illegal field ${p}${k}`);\n                if (typeof bk === \"object\") recursiveValidate(p + k + \".\", ak, bk);\n            }\n        };\n        if (!skipFieldCheck) recursiveValidate(\"\", this.queryFields, fields);\n        this.queryFields = fields;\n        // @ts-expect-error TODO: fix this\n        return this;\n    }\n    /**\n     * Sets variables/filters using an object\n     * @param variables variable object to set\n     * @returns this (chainable)\n     */ variables(variables) {\n        this.queryVars = {\n            ...this.queryVars,\n            ...variables\n        };\n        // @ts-expect-error - dynamic builder props\n        return this;\n    }\n    /**\n     * Builds the current query and returns a ready to POST query string\n     * @returns string form of the current query\n     */ async toQuery() {\n        await this.buildQuery();\n        return this._query;\n    }\n    // instance generic type accessors\n    /**\n     * Dummy method to access the internal `TReturn` generic type\n     * @returns \"tReturn\"\n     */ tReturn() {\n        return \"tReturn\";\n    }\n    /**\n     * Dummy method to access the internal `TQuery` generic type\n     * @returns \"tQuery\"\n     */ tQuery() {\n        return \"tQuery\";\n    }\n    /**\n     * Dummy method to access the internal `TVars` generic type\n     * @returns \"tVars\"\n     */ tVars() {\n        return \"tVars\";\n    }\n    // Promise contract functions, so users can `await` a GraphQLQuery instance to resolve the built query.\n    // very cool, thanks Knex.\n    /**\n     * Resolves `this` by getting all results for the query (including paging)\n     * @param onFulfilled - optional onFulfilled callback\n     * @returns - all results for built query\n     */ async then(onFulfilled, onRejected) {\n        const res = this.all();\n        return res.then(onFulfilled, onRejected);\n    }\n    async catch(onReject) {\n        return this.then().catch(onReject);\n    }\n    async finally(onFinally) {\n        return this.then().finally(onFinally);\n    }\n} // this was definitely not over engineered 👀\n //# sourceMappingURL=graphql.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/graphql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/index.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/index.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* reexport safe */ _query_js__WEBPACK_IMPORTED_MODULE_0__.Query),\n/* harmony export */   \"default\": () => (/* reexport safe */ _query_js__WEBPACK_IMPORTED_MODULE_0__.Query)\n/* harmony export */ });\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query.js */ \"(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/query.js\");\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUM7QUFDVyxDQUM5QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BpcnlzK3F1ZXJ5QDAuMC4xX2RlYnVnQDQuNC4wL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vaW5kZXguanM/YmM3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBRdWVyeSB9IGZyb20gXCIuL3F1ZXJ5LmpzXCI7XG5leHBvcnQgeyBRdWVyeSBhcyBkZWZhdWx0IH0gZnJvbSBcIi4vcXVlcnkuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJRdWVyeSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/block.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/block.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arweaveBlockQuery: () => (/* binding */ arweaveBlockQuery),\n/* harmony export */   block: () => (/* binding */ block),\n/* harmony export */   blockVars: () => (/* binding */ blockVars)\n/* harmony export */ });\nconst block = {\n    id: \"\",\n    timestamp: 0,\n    height: \"\",\n    previous: \"\"\n};\n// default variables\nconst blockVars = {\n    id: undefined\n};\nconst arweaveBlockQuery = {\n    name: \"block\",\n    query: block,\n    vars: blockVars\n}; //# sourceMappingURL=block.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2Fyd2VhdmUvYmxvY2suanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sTUFBTUEsUUFBUTtJQUNqQkMsSUFBSTtJQUNKQyxXQUFXO0lBQ1hDLFFBQVE7SUFDUkMsVUFBVTtBQUNkLEVBQUU7QUFDRixvQkFBb0I7QUFDYixNQUFNQyxZQUFZO0lBQ3JCSixJQUFJSztBQUNSLEVBQUU7QUFDSyxNQUFNQyxvQkFBb0I7SUFDN0JDLE1BQU07SUFDTkMsT0FBT1Q7SUFDUFUsTUFBTUw7QUFDVixFQUFFLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AaXJ5cytxdWVyeUAwLjAuMV9kZWJ1Z0A0LjQuMC9ub2RlX21vZHVsZXMvQGlyeXMvcXVlcnkvYnVpbGQvZXNtL3F1ZXJpZXMvYXJ3ZWF2ZS9ibG9jay5qcz9iZTNkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBibG9jayA9IHtcbiAgICBpZDogXCJcIixcbiAgICB0aW1lc3RhbXA6IDAsXG4gICAgaGVpZ2h0OiBcIlwiLFxuICAgIHByZXZpb3VzOiBcIlwiLFxufTtcbi8vIGRlZmF1bHQgdmFyaWFibGVzXG5leHBvcnQgY29uc3QgYmxvY2tWYXJzID0ge1xuICAgIGlkOiB1bmRlZmluZWQsXG59O1xuZXhwb3J0IGNvbnN0IGFyd2VhdmVCbG9ja1F1ZXJ5ID0ge1xuICAgIG5hbWU6IFwiYmxvY2tcIixcbiAgICBxdWVyeTogYmxvY2ssXG4gICAgdmFyczogYmxvY2tWYXJzLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJsb2NrLmpzLm1hcCJdLCJuYW1lcyI6WyJibG9jayIsImlkIiwidGltZXN0YW1wIiwiaGVpZ2h0IiwicHJldmlvdXMiLCJibG9ja1ZhcnMiLCJ1bmRlZmluZWQiLCJhcndlYXZlQmxvY2tRdWVyeSIsIm5hbWUiLCJxdWVyeSIsInZhcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/block.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/blocks.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/blocks.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arweaveBlocksQuery: () => (/* binding */ arweaveBlocksQuery),\n/* harmony export */   blocksVars: () => (/* binding */ blocksVars)\n/* harmony export */ });\n/* harmony import */ var _block_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./block.js */ \"(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/block.js\");\n\n// default variables\nconst blocksVars = {\n    ids: undefined,\n    // height: undefined,\n    minHeight: undefined,\n    maxHeight: undefined,\n    pageSize: 10,\n    after: undefined,\n    sort: \"DESC\"\n};\nconst arweaveBlocksQuery = {\n    name: \"blocks\",\n    query: _block_js__WEBPACK_IMPORTED_MODULE_0__.block,\n    vars: blocksVars,\n    enumValues: [\n        \"sort\"\n    ],\n    remapVars: {\n        pageSize: \"first\",\n        // replace ASC/DESC to HEIGHT prefixed versions\n        sort: (k, v)=>[\n                k,\n                v === \"ASC\" ? \"HEIGHT_ASC\" : \"HEIGHT_DESC\"\n            ],\n        minHeight: (_k, v, vars)=>{\n            vars.height = {\n                ...vars.height,\n                min: v\n            };\n            vars.minHeight = undefined;\n        },\n        maxHeight: (_k, v, vars)=>{\n            vars.height = {\n                ...vars.height,\n                max: v\n            };\n            vars.maxHeight = undefined;\n        }\n    },\n    paging: {\n        hasNextPage: \"hasNextPage\",\n        cursor: \"cursor\"\n    }\n}; //# sourceMappingURL=blocks.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2Fyd2VhdmUvYmxvY2tzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtQztBQUNuQyxvQkFBb0I7QUFDYixNQUFNQyxhQUFhO0lBQ3RCQyxLQUFLQztJQUNMLHFCQUFxQjtJQUNyQkMsV0FBV0Q7SUFDWEUsV0FBV0Y7SUFDWEcsVUFBVTtJQUNWQyxPQUFPSjtJQUNQSyxNQUFNO0FBQ1YsRUFBRTtBQUNLLE1BQU1DLHFCQUFxQjtJQUM5QkMsTUFBTTtJQUNOQyxPQUFPWCw0Q0FBS0E7SUFDWlksTUFBTVg7SUFDTlksWUFBWTtRQUFDO0tBQU87SUFDcEJDLFdBQVc7UUFDUFIsVUFBVTtRQUNWLCtDQUErQztRQUMvQ0UsTUFBTSxDQUFDTyxHQUFHQyxJQUFNO2dCQUFDRDtnQkFBR0MsTUFBTSxRQUFRLGVBQWU7YUFBYztRQUMvRFosV0FBVyxDQUFDYSxJQUFJRCxHQUFHSjtZQUNmQSxLQUFLTSxNQUFNLEdBQUc7Z0JBQUUsR0FBR04sS0FBS00sTUFBTTtnQkFBRUMsS0FBS0g7WUFBRTtZQUN2Q0osS0FBS1IsU0FBUyxHQUFHRDtRQUNyQjtRQUNBRSxXQUFXLENBQUNZLElBQUlELEdBQUdKO1lBQ2ZBLEtBQUtNLE1BQU0sR0FBRztnQkFBRSxHQUFHTixLQUFLTSxNQUFNO2dCQUFFRSxLQUFLSjtZQUFFO1lBQ3ZDSixLQUFLUCxTQUFTLEdBQUdGO1FBQ3JCO0lBQ0o7SUFDQWtCLFFBQVE7UUFDSkMsYUFBYTtRQUNiQyxRQUFRO0lBQ1o7QUFDSixFQUFFLENBQ0Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AaXJ5cytxdWVyeUAwLjAuMV9kZWJ1Z0A0LjQuMC9ub2RlX21vZHVsZXMvQGlyeXMvcXVlcnkvYnVpbGQvZXNtL3F1ZXJpZXMvYXJ3ZWF2ZS9ibG9ja3MuanM/YzhmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBibG9jayB9IGZyb20gXCIuL2Jsb2NrLmpzXCI7XG4vLyBkZWZhdWx0IHZhcmlhYmxlc1xuZXhwb3J0IGNvbnN0IGJsb2Nrc1ZhcnMgPSB7XG4gICAgaWRzOiB1bmRlZmluZWQsXG4gICAgLy8gaGVpZ2h0OiB1bmRlZmluZWQsXG4gICAgbWluSGVpZ2h0OiB1bmRlZmluZWQsXG4gICAgbWF4SGVpZ2h0OiB1bmRlZmluZWQsXG4gICAgcGFnZVNpemU6IDEwLFxuICAgIGFmdGVyOiB1bmRlZmluZWQsXG4gICAgc29ydDogXCJERVNDXCIsIC8vIFJFTUFQUEVEXG59O1xuZXhwb3J0IGNvbnN0IGFyd2VhdmVCbG9ja3NRdWVyeSA9IHtcbiAgICBuYW1lOiBcImJsb2Nrc1wiLFxuICAgIHF1ZXJ5OiBibG9jayxcbiAgICB2YXJzOiBibG9ja3NWYXJzLFxuICAgIGVudW1WYWx1ZXM6IFtcInNvcnRcIl0sXG4gICAgcmVtYXBWYXJzOiB7XG4gICAgICAgIHBhZ2VTaXplOiBcImZpcnN0XCIsXG4gICAgICAgIC8vIHJlcGxhY2UgQVNDL0RFU0MgdG8gSEVJR0hUIHByZWZpeGVkIHZlcnNpb25zXG4gICAgICAgIHNvcnQ6IChrLCB2KSA9PiBbaywgdiA9PT0gXCJBU0NcIiA/IFwiSEVJR0hUX0FTQ1wiIDogXCJIRUlHSFRfREVTQ1wiXSxcbiAgICAgICAgbWluSGVpZ2h0OiAoX2ssIHYsIHZhcnMpID0+IHtcbiAgICAgICAgICAgIHZhcnMuaGVpZ2h0ID0geyAuLi52YXJzLmhlaWdodCwgbWluOiB2IH07XG4gICAgICAgICAgICB2YXJzLm1pbkhlaWdodCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfSxcbiAgICAgICAgbWF4SGVpZ2h0OiAoX2ssIHYsIHZhcnMpID0+IHtcbiAgICAgICAgICAgIHZhcnMuaGVpZ2h0ID0geyAuLi52YXJzLmhlaWdodCwgbWF4OiB2IH07XG4gICAgICAgICAgICB2YXJzLm1heEhlaWdodCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIHBhZ2luZzoge1xuICAgICAgICBoYXNOZXh0UGFnZTogXCJoYXNOZXh0UGFnZVwiLFxuICAgICAgICBjdXJzb3I6IFwiY3Vyc29yXCIsXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ibG9ja3MuanMubWFwIl0sIm5hbWVzIjpbImJsb2NrIiwiYmxvY2tzVmFycyIsImlkcyIsInVuZGVmaW5lZCIsIm1pbkhlaWdodCIsIm1heEhlaWdodCIsInBhZ2VTaXplIiwiYWZ0ZXIiLCJzb3J0IiwiYXJ3ZWF2ZUJsb2Nrc1F1ZXJ5IiwibmFtZSIsInF1ZXJ5IiwidmFycyIsImVudW1WYWx1ZXMiLCJyZW1hcFZhcnMiLCJrIiwidiIsIl9rIiwiaGVpZ2h0IiwibWluIiwibWF4IiwicGFnaW5nIiwiaGFzTmV4dFBhZ2UiLCJjdXJzb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/blocks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/transaction.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/transaction.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arweaveTransactionQuery: () => (/* binding */ arweaveTransactionQuery),\n/* harmony export */   transaction: () => (/* binding */ transaction),\n/* harmony export */   transactionVars: () => (/* binding */ transactionVars)\n/* harmony export */ });\n// derive type from minimal object, use this object to validate structure in code.\nconst transaction = {\n    id: \"\",\n    anchor: \"\",\n    signature: \"\",\n    recipient: \"\",\n    owner: {\n        address: \"\",\n        key: \"\"\n    },\n    fee: {\n        winston: \"\",\n        ar: \"\"\n    },\n    quantity: {\n        winston: \"\",\n        ar: \"\"\n    },\n    data: {\n        size: \"\",\n        type: \"\"\n    },\n    tags: [\n        {\n            name: \"\",\n            value: \"\"\n        }\n    ],\n    block: {\n        id: \"\",\n        timestamp: 0,\n        height: 0,\n        previous: \"\"\n    },\n    bundledIn: {\n        id: \"\"\n    }\n};\n// default variables\nconst transactionVars = {\n    id: undefined\n};\nconst arweaveTransactionQuery = {\n    name: \"transaction\",\n    query: transaction,\n    vars: transactionVars\n}; //# sourceMappingURL=transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2Fyd2VhdmUvdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsa0ZBQWtGO0FBQzNFLE1BQU1BLGNBQWM7SUFDdkJDLElBQUk7SUFDSkMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDLFdBQVc7SUFDWEMsT0FBTztRQUNIQyxTQUFTO1FBQ1RDLEtBQUs7SUFDVDtJQUNBQyxLQUFLO1FBQ0RDLFNBQVM7UUFDVEMsSUFBSTtJQUNSO0lBQ0FDLFVBQVU7UUFDTkYsU0FBUztRQUNUQyxJQUFJO0lBQ1I7SUFDQUUsTUFBTTtRQUNGQyxNQUFNO1FBQ05DLE1BQU07SUFDVjtJQUNBQyxNQUFNO1FBQUM7WUFBRUMsTUFBTTtZQUFJQyxPQUFPO1FBQUc7S0FBRTtJQUMvQkMsT0FBTztRQUNIakIsSUFBSTtRQUNKa0IsV0FBVztRQUNYQyxRQUFRO1FBQ1JDLFVBQVU7SUFDZDtJQUNBQyxXQUFXO1FBQ1ByQixJQUFJO0lBQ1I7QUFDSixFQUFFO0FBQ0Ysb0JBQW9CO0FBQ2IsTUFBTXNCLGtCQUFrQjtJQUMzQnRCLElBQUl1QjtBQUNSLEVBQUU7QUFDSyxNQUFNQywwQkFBMEI7SUFDbkNULE1BQU07SUFDTlUsT0FBTzFCO0lBQ1AyQixNQUFNSjtBQUNWLEVBQUUsQ0FDRix1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BpcnlzK3F1ZXJ5QDAuMC4xX2RlYnVnQDQuNC4wL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9hcndlYXZlL3RyYW5zYWN0aW9uLmpzPzVmYmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGVyaXZlIHR5cGUgZnJvbSBtaW5pbWFsIG9iamVjdCwgdXNlIHRoaXMgb2JqZWN0IHRvIHZhbGlkYXRlIHN0cnVjdHVyZSBpbiBjb2RlLlxuZXhwb3J0IGNvbnN0IHRyYW5zYWN0aW9uID0ge1xuICAgIGlkOiBcIlwiLFxuICAgIGFuY2hvcjogXCJcIixcbiAgICBzaWduYXR1cmU6IFwiXCIsXG4gICAgcmVjaXBpZW50OiBcIlwiLFxuICAgIG93bmVyOiB7XG4gICAgICAgIGFkZHJlc3M6IFwiXCIsXG4gICAgICAgIGtleTogXCJcIixcbiAgICB9LFxuICAgIGZlZToge1xuICAgICAgICB3aW5zdG9uOiBcIlwiLFxuICAgICAgICBhcjogXCJcIixcbiAgICB9LFxuICAgIHF1YW50aXR5OiB7XG4gICAgICAgIHdpbnN0b246IFwiXCIsXG4gICAgICAgIGFyOiBcIlwiLFxuICAgIH0sXG4gICAgZGF0YToge1xuICAgICAgICBzaXplOiBcIlwiLFxuICAgICAgICB0eXBlOiBcIlwiLFxuICAgIH0sXG4gICAgdGFnczogW3sgbmFtZTogXCJcIiwgdmFsdWU6IFwiXCIgfV0sXG4gICAgYmxvY2s6IHtcbiAgICAgICAgaWQ6IFwiXCIsXG4gICAgICAgIHRpbWVzdGFtcDogMCxcbiAgICAgICAgaGVpZ2h0OiAwLFxuICAgICAgICBwcmV2aW91czogXCJcIixcbiAgICB9LFxuICAgIGJ1bmRsZWRJbjoge1xuICAgICAgICBpZDogXCJcIixcbiAgICB9LFxufTtcbi8vIGRlZmF1bHQgdmFyaWFibGVzXG5leHBvcnQgY29uc3QgdHJhbnNhY3Rpb25WYXJzID0ge1xuICAgIGlkOiB1bmRlZmluZWQsXG59O1xuZXhwb3J0IGNvbnN0IGFyd2VhdmVUcmFuc2FjdGlvblF1ZXJ5ID0ge1xuICAgIG5hbWU6IFwidHJhbnNhY3Rpb25cIixcbiAgICBxdWVyeTogdHJhbnNhY3Rpb24sXG4gICAgdmFyczogdHJhbnNhY3Rpb25WYXJzLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zYWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJ0cmFuc2FjdGlvbiIsImlkIiwiYW5jaG9yIiwic2lnbmF0dXJlIiwicmVjaXBpZW50Iiwib3duZXIiLCJhZGRyZXNzIiwia2V5IiwiZmVlIiwid2luc3RvbiIsImFyIiwicXVhbnRpdHkiLCJkYXRhIiwic2l6ZSIsInR5cGUiLCJ0YWdzIiwibmFtZSIsInZhbHVlIiwiYmxvY2siLCJ0aW1lc3RhbXAiLCJoZWlnaHQiLCJwcmV2aW91cyIsImJ1bmRsZWRJbiIsInRyYW5zYWN0aW9uVmFycyIsInVuZGVmaW5lZCIsImFyd2VhdmVUcmFuc2FjdGlvblF1ZXJ5IiwicXVlcnkiLCJ2YXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/transactions.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/transactions.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arweaveTransactionsQuery: () => (/* binding */ arweaveTransactionsQuery),\n/* harmony export */   transactionsVars: () => (/* binding */ transactionsVars)\n/* harmony export */ });\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transaction.js */ \"(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/transaction.js\");\n\n// default variables\nconst transactionsVars = {\n    ids: undefined,\n    from: undefined,\n    to: undefined,\n    tags: undefined,\n    bundledIn: undefined,\n    // block: undefined,\n    minHeight: undefined,\n    maxHeight: undefined,\n    pageSize: 10,\n    after: undefined,\n    sort: \"DESC\"\n};\nconst arweaveTransactionsQuery = {\n    name: \"transactions\",\n    query: _transaction_js__WEBPACK_IMPORTED_MODULE_0__.transaction,\n    enumValues: [\n        \"sort\"\n    ],\n    vars: transactionsVars,\n    remapVars: {\n        pageSize: \"first\",\n        from: \"owners\",\n        to: \"recipients\",\n        // replace ASC/DESC to HEIGHT prefixed versions\n        sort: (k, v)=>[\n                k,\n                v === \"ASC\" ? \"HEIGHT_ASC\" : \"HEIGHT_DESC\"\n            ],\n        minHeight: (_k, v, vars)=>{\n            vars.block = {\n                ...vars.block,\n                min: v\n            };\n            vars.minHeight = undefined;\n        },\n        maxHeight: (_k, v, vars)=>{\n            vars.block = {\n                ...vars.block,\n                max: v\n            };\n            vars.maxHeight = undefined;\n        }\n    },\n    paging: {\n        hasNextPage: \"hasNextPage\",\n        cursor: \"cursor\"\n    }\n}; //# sourceMappingURL=transactions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2Fyd2VhdmUvdHJhbnNhY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUMvQyxvQkFBb0I7QUFDYixNQUFNQyxtQkFBbUI7SUFDNUJDLEtBQUtDO0lBQ0xDLE1BQU1EO0lBQ05FLElBQUlGO0lBQ0pHLE1BQU1IO0lBQ05JLFdBQVdKO0lBQ1gsb0JBQW9CO0lBQ3BCSyxXQUFXTDtJQUNYTSxXQUFXTjtJQUNYTyxVQUFVO0lBQ1ZDLE9BQU9SO0lBQ1BTLE1BQU07QUFDVixFQUFFO0FBQ0ssTUFBTUMsMkJBQTJCO0lBQ3BDQyxNQUFNO0lBQ05DLE9BQU9mLHdEQUFXQTtJQUNsQmdCLFlBQVk7UUFBQztLQUFPO0lBQ3BCQyxNQUFNaEI7SUFDTmlCLFdBQVc7UUFDUFIsVUFBVTtRQUNWTixNQUFNO1FBQ05DLElBQUk7UUFDSiwrQ0FBK0M7UUFDL0NPLE1BQU0sQ0FBQ08sR0FBR0MsSUFBTTtnQkFBQ0Q7Z0JBQUdDLE1BQU0sUUFBUSxlQUFlO2FBQWM7UUFDL0RaLFdBQVcsQ0FBQ2EsSUFBSUQsR0FBR0g7WUFDZkEsS0FBS0ssS0FBSyxHQUFHO2dCQUFFLEdBQUdMLEtBQUtLLEtBQUs7Z0JBQUVDLEtBQUtIO1lBQUU7WUFDckNILEtBQUtULFNBQVMsR0FBR0w7UUFDckI7UUFDQU0sV0FBVyxDQUFDWSxJQUFJRCxHQUFHSDtZQUNmQSxLQUFLSyxLQUFLLEdBQUc7Z0JBQUUsR0FBR0wsS0FBS0ssS0FBSztnQkFBRUUsS0FBS0o7WUFBRTtZQUNyQ0gsS0FBS1IsU0FBUyxHQUFHTjtRQUNyQjtJQUNKO0lBQ0FzQixRQUFRO1FBQ0pDLGFBQWE7UUFDYkMsUUFBUTtJQUNaO0FBQ0osRUFBRSxDQUNGLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2Fyd2VhdmUvdHJhbnNhY3Rpb25zLmpzP2E5MGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHJhbnNhY3Rpb24gfSBmcm9tIFwiLi90cmFuc2FjdGlvbi5qc1wiO1xuLy8gZGVmYXVsdCB2YXJpYWJsZXNcbmV4cG9ydCBjb25zdCB0cmFuc2FjdGlvbnNWYXJzID0ge1xuICAgIGlkczogdW5kZWZpbmVkLFxuICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB0bzogdW5kZWZpbmVkLFxuICAgIHRhZ3M6IHVuZGVmaW5lZCxcbiAgICBidW5kbGVkSW46IHVuZGVmaW5lZCxcbiAgICAvLyBibG9jazogdW5kZWZpbmVkLFxuICAgIG1pbkhlaWdodDogdW5kZWZpbmVkLFxuICAgIG1heEhlaWdodDogdW5kZWZpbmVkLFxuICAgIHBhZ2VTaXplOiAxMCxcbiAgICBhZnRlcjogdW5kZWZpbmVkLFxuICAgIHNvcnQ6IFwiREVTQ1wiLCAvLyBSRU1BUFBFRFxufTtcbmV4cG9ydCBjb25zdCBhcndlYXZlVHJhbnNhY3Rpb25zUXVlcnkgPSB7XG4gICAgbmFtZTogXCJ0cmFuc2FjdGlvbnNcIixcbiAgICBxdWVyeTogdHJhbnNhY3Rpb24sXG4gICAgZW51bVZhbHVlczogW1wic29ydFwiXSxcbiAgICB2YXJzOiB0cmFuc2FjdGlvbnNWYXJzLFxuICAgIHJlbWFwVmFyczoge1xuICAgICAgICBwYWdlU2l6ZTogXCJmaXJzdFwiLFxuICAgICAgICBmcm9tOiBcIm93bmVyc1wiLFxuICAgICAgICB0bzogXCJyZWNpcGllbnRzXCIsXG4gICAgICAgIC8vIHJlcGxhY2UgQVNDL0RFU0MgdG8gSEVJR0hUIHByZWZpeGVkIHZlcnNpb25zXG4gICAgICAgIHNvcnQ6IChrLCB2KSA9PiBbaywgdiA9PT0gXCJBU0NcIiA/IFwiSEVJR0hUX0FTQ1wiIDogXCJIRUlHSFRfREVTQ1wiXSxcbiAgICAgICAgbWluSGVpZ2h0OiAoX2ssIHYsIHZhcnMpID0+IHtcbiAgICAgICAgICAgIHZhcnMuYmxvY2sgPSB7IC4uLnZhcnMuYmxvY2ssIG1pbjogdiB9O1xuICAgICAgICAgICAgdmFycy5taW5IZWlnaHQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIG1heEhlaWdodDogKF9rLCB2LCB2YXJzKSA9PiB7XG4gICAgICAgICAgICB2YXJzLmJsb2NrID0geyAuLi52YXJzLmJsb2NrLCBtYXg6IHYgfTtcbiAgICAgICAgICAgIHZhcnMubWF4SGVpZ2h0ID0gdW5kZWZpbmVkO1xuICAgICAgICB9LFxuICAgIH0sXG4gICAgcGFnaW5nOiB7XG4gICAgICAgIGhhc05leHRQYWdlOiBcImhhc05leHRQYWdlXCIsXG4gICAgICAgIGN1cnNvcjogXCJjdXJzb3JcIixcbiAgICB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zYWN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOlsidHJhbnNhY3Rpb24iLCJ0cmFuc2FjdGlvbnNWYXJzIiwiaWRzIiwidW5kZWZpbmVkIiwiZnJvbSIsInRvIiwidGFncyIsImJ1bmRsZWRJbiIsIm1pbkhlaWdodCIsIm1heEhlaWdodCIsInBhZ2VTaXplIiwiYWZ0ZXIiLCJzb3J0IiwiYXJ3ZWF2ZVRyYW5zYWN0aW9uc1F1ZXJ5IiwibmFtZSIsInF1ZXJ5IiwiZW51bVZhbHVlcyIsInZhcnMiLCJyZW1hcFZhcnMiLCJrIiwidiIsIl9rIiwiYmxvY2siLCJtaW4iLCJtYXgiLCJwYWdpbmciLCJoYXNOZXh0UGFnZSIsImN1cnNvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/transactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/index.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queries: () => (/* binding */ queries)\n/* harmony export */ });\n/* harmony import */ var _arweave_blocks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arweave/blocks.js */ \"(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/blocks.js\");\n/* harmony import */ var _arweave_transactions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arweave/transactions.js */ \"(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/arweave/transactions.js\");\n/* harmony import */ var _irys_transactions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./irys/transactions.js */ \"(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/irys/transactions.js\");\n\n\n\n// import { arweaveTransactionQuery } from \"./arweave/transaction.js\";\n// import { arweaveBlockQuery } from \"./arweave/block.js\";\n// map query names to queries\nconst queries = {\n    \"irys:transactions\": _irys_transactions_js__WEBPACK_IMPORTED_MODULE_2__.irysTransactionsQuery,\n    \"arweave:transactions\": _arweave_transactions_js__WEBPACK_IMPORTED_MODULE_1__.arweaveTransactionsQuery,\n    \"arweave:blocks\": _arweave_blocks_js__WEBPACK_IMPORTED_MODULE_0__.arweaveBlocksQuery\n}; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUQ7QUFDWTtBQUNOO0FBQy9ELHNFQUFzRTtBQUN0RSwwREFBMEQ7QUFDMUQsNkJBQTZCO0FBQ3RCLE1BQU1HLFVBQVU7SUFDbkIscUJBQXFCRCx3RUFBcUJBO0lBQzFDLHdCQUF3QkQsOEVBQXdCQTtJQUNoRCxrQkFBa0JELGtFQUFrQkE7QUFHeEMsRUFBRSxDQUNGLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2luZGV4LmpzPzVlZGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXJ3ZWF2ZUJsb2Nrc1F1ZXJ5IH0gZnJvbSBcIi4vYXJ3ZWF2ZS9ibG9ja3MuanNcIjtcbmltcG9ydCB7IGFyd2VhdmVUcmFuc2FjdGlvbnNRdWVyeSB9IGZyb20gXCIuL2Fyd2VhdmUvdHJhbnNhY3Rpb25zLmpzXCI7XG5pbXBvcnQgeyBpcnlzVHJhbnNhY3Rpb25zUXVlcnkgfSBmcm9tIFwiLi9pcnlzL3RyYW5zYWN0aW9ucy5qc1wiO1xuLy8gaW1wb3J0IHsgYXJ3ZWF2ZVRyYW5zYWN0aW9uUXVlcnkgfSBmcm9tIFwiLi9hcndlYXZlL3RyYW5zYWN0aW9uLmpzXCI7XG4vLyBpbXBvcnQgeyBhcndlYXZlQmxvY2tRdWVyeSB9IGZyb20gXCIuL2Fyd2VhdmUvYmxvY2suanNcIjtcbi8vIG1hcCBxdWVyeSBuYW1lcyB0byBxdWVyaWVzXG5leHBvcnQgY29uc3QgcXVlcmllcyA9IHtcbiAgICBcImlyeXM6dHJhbnNhY3Rpb25zXCI6IGlyeXNUcmFuc2FjdGlvbnNRdWVyeSxcbiAgICBcImFyd2VhdmU6dHJhbnNhY3Rpb25zXCI6IGFyd2VhdmVUcmFuc2FjdGlvbnNRdWVyeSxcbiAgICBcImFyd2VhdmU6YmxvY2tzXCI6IGFyd2VhdmVCbG9ja3NRdWVyeSxcbiAgICAvLyBcImFyd2VhdmU6dHJhbnNhY3Rpb25cIjogYXJ3ZWF2ZVRyYW5zYWN0aW9uUXVlcnksXG4gICAgLy8gXCJhcndlYXZlOmJsb2NrXCI6IGFyd2VhdmVCbG9ja1F1ZXJ5LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJhcndlYXZlQmxvY2tzUXVlcnkiLCJhcndlYXZlVHJhbnNhY3Rpb25zUXVlcnkiLCJpcnlzVHJhbnNhY3Rpb25zUXVlcnkiLCJxdWVyaWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/irys/transactions.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/irys/transactions.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   irysTransactionsQuery: () => (/* binding */ irysTransactionsQuery),\n/* harmony export */   transactionVars: () => (/* binding */ transactionVars),\n/* harmony export */   transactions: () => (/* binding */ transactions)\n/* harmony export */ });\n// derive type from minimal object, use this object to validate structure in code.\nconst transactions = {\n    id: \"\",\n    receipt: {\n        deadlineHeight: 0,\n        signature: \"\",\n        timestamp: 0,\n        version: \"\"\n    },\n    tags: [\n        {\n            name: \"\",\n            value: \"\"\n        }\n    ],\n    address: \"\",\n    token: \"\",\n    signature: \"\",\n    timestamp: 0\n};\n// default variables\nconst transactionVars = {\n    ids: undefined,\n    after: undefined,\n    token: undefined,\n    from: undefined,\n    pageSize: 100,\n    sort: \"ASC\",\n    // hasTags: undefined,\n    tags: undefined,\n    fromTimestamp: undefined,\n    toTimestamp: undefined\n};\nconst irysTransactionsQuery = {\n    name: \"transactions\",\n    query: transactions,\n    enumValues: [\n        \"order\"\n    ],\n    vars: transactionVars,\n    remapVars: {\n        pageSize: \"first\",\n        sort: \"order\",\n        from: \"owners\",\n        fromTimestamp: (_k, v, vars)=>{\n            vars.timestamp = {\n                ...vars.timestamp,\n                from: new Date(v).getTime()\n            };\n            vars.fromTimestamp = undefined;\n        },\n        toTimestamp: (_k, v, vars)=>{\n            vars.timestamp = {\n                ...vars.timestamp,\n                to: new Date(v).getTime()\n            };\n            vars.toTimestamp = undefined;\n        }\n    },\n    paging: {\n        hasNextPage: \"hasNextPage\",\n        cursor: \"cursor\"\n    }\n}; //# sourceMappingURL=transactions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyaWVzL2lyeXMvdHJhbnNhY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGtGQUFrRjtBQUMzRSxNQUFNQSxlQUFlO0lBQ3hCQyxJQUFJO0lBQ0pDLFNBQVM7UUFDTEMsZ0JBQWdCO1FBQ2hCQyxXQUFXO1FBQ1hDLFdBQVc7UUFDWEMsU0FBUztJQUNiO0lBQ0FDLE1BQU07UUFBQztZQUFFQyxNQUFNO1lBQUlDLE9BQU87UUFBRztLQUFFO0lBQy9CQyxTQUFTO0lBQ1RDLE9BQU87SUFDUFAsV0FBVztJQUNYQyxXQUFXO0FBQ2YsRUFBRTtBQUNGLG9CQUFvQjtBQUNiLE1BQU1PLGtCQUFrQjtJQUMzQkMsS0FBS0M7SUFDTEMsT0FBT0Q7SUFDUEgsT0FBT0c7SUFDUEUsTUFBTUY7SUFDTkcsVUFBVTtJQUNWQyxNQUFNO0lBQ04sc0JBQXNCO0lBQ3RCWCxNQUFNTztJQUNOSyxlQUFlTDtJQUNmTSxhQUFhTjtBQUNqQixFQUFFO0FBQ0ssTUFBTU8sd0JBQXdCO0lBQ2pDYixNQUFNO0lBQ05jLE9BQU90QjtJQUNQdUIsWUFBWTtRQUFDO0tBQVE7SUFDckJDLE1BQU1aO0lBQ05hLFdBQVc7UUFDUFIsVUFBVTtRQUNWQyxNQUFNO1FBQ05GLE1BQU07UUFDTkcsZUFBZSxDQUFDTyxJQUFJQyxHQUFHSDtZQUNuQkEsS0FBS25CLFNBQVMsR0FBRztnQkFBRSxHQUFHbUIsS0FBS25CLFNBQVM7Z0JBQUVXLE1BQU0sSUFBSVksS0FBS0QsR0FBR0UsT0FBTztZQUFHO1lBQ2xFTCxLQUFLTCxhQUFhLEdBQUdMO1FBQ3pCO1FBQ0FNLGFBQWEsQ0FBQ00sSUFBSUMsR0FBR0g7WUFDakJBLEtBQUtuQixTQUFTLEdBQUc7Z0JBQUUsR0FBR21CLEtBQUtuQixTQUFTO2dCQUFFeUIsSUFBSSxJQUFJRixLQUFLRCxHQUFHRSxPQUFPO1lBQUc7WUFDaEVMLEtBQUtKLFdBQVcsR0FBR047UUFDdkI7SUFDSjtJQUNBaUIsUUFBUTtRQUNKQyxhQUFhO1FBQ2JDLFFBQVE7SUFDWjtBQUNKLEVBQUUsQ0FDRix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL0BpcnlzK3F1ZXJ5QDAuMC4xX2RlYnVnQDQuNC4wL25vZGVfbW9kdWxlcy9AaXJ5cy9xdWVyeS9idWlsZC9lc20vcXVlcmllcy9pcnlzL3RyYW5zYWN0aW9ucy5qcz9kYzY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGRlcml2ZSB0eXBlIGZyb20gbWluaW1hbCBvYmplY3QsIHVzZSB0aGlzIG9iamVjdCB0byB2YWxpZGF0ZSBzdHJ1Y3R1cmUgaW4gY29kZS5cbmV4cG9ydCBjb25zdCB0cmFuc2FjdGlvbnMgPSB7XG4gICAgaWQ6IFwiXCIsXG4gICAgcmVjZWlwdDoge1xuICAgICAgICBkZWFkbGluZUhlaWdodDogMCxcbiAgICAgICAgc2lnbmF0dXJlOiBcIlwiLFxuICAgICAgICB0aW1lc3RhbXA6IDAsXG4gICAgICAgIHZlcnNpb246IFwiXCIsXG4gICAgfSxcbiAgICB0YWdzOiBbeyBuYW1lOiBcIlwiLCB2YWx1ZTogXCJcIiB9XSxcbiAgICBhZGRyZXNzOiBcIlwiLFxuICAgIHRva2VuOiBcIlwiLFxuICAgIHNpZ25hdHVyZTogXCJcIixcbiAgICB0aW1lc3RhbXA6IDAsXG59O1xuLy8gZGVmYXVsdCB2YXJpYWJsZXNcbmV4cG9ydCBjb25zdCB0cmFuc2FjdGlvblZhcnMgPSB7XG4gICAgaWRzOiB1bmRlZmluZWQsXG4gICAgYWZ0ZXI6IHVuZGVmaW5lZCxcbiAgICB0b2tlbjogdW5kZWZpbmVkLFxuICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICBwYWdlU2l6ZTogMTAwLFxuICAgIHNvcnQ6IFwiQVNDXCIsXG4gICAgLy8gaGFzVGFnczogdW5kZWZpbmVkLFxuICAgIHRhZ3M6IHVuZGVmaW5lZCxcbiAgICBmcm9tVGltZXN0YW1wOiB1bmRlZmluZWQsXG4gICAgdG9UaW1lc3RhbXA6IHVuZGVmaW5lZCxcbn07XG5leHBvcnQgY29uc3QgaXJ5c1RyYW5zYWN0aW9uc1F1ZXJ5ID0ge1xuICAgIG5hbWU6IFwidHJhbnNhY3Rpb25zXCIsXG4gICAgcXVlcnk6IHRyYW5zYWN0aW9ucyxcbiAgICBlbnVtVmFsdWVzOiBbXCJvcmRlclwiXSxcbiAgICB2YXJzOiB0cmFuc2FjdGlvblZhcnMsXG4gICAgcmVtYXBWYXJzOiB7XG4gICAgICAgIHBhZ2VTaXplOiBcImZpcnN0XCIsXG4gICAgICAgIHNvcnQ6IFwib3JkZXJcIixcbiAgICAgICAgZnJvbTogXCJvd25lcnNcIixcbiAgICAgICAgZnJvbVRpbWVzdGFtcDogKF9rLCB2LCB2YXJzKSA9PiB7XG4gICAgICAgICAgICB2YXJzLnRpbWVzdGFtcCA9IHsgLi4udmFycy50aW1lc3RhbXAsIGZyb206IG5ldyBEYXRlKHYpLmdldFRpbWUoKSB9O1xuICAgICAgICAgICAgdmFycy5mcm9tVGltZXN0YW1wID0gdW5kZWZpbmVkO1xuICAgICAgICB9LFxuICAgICAgICB0b1RpbWVzdGFtcDogKF9rLCB2LCB2YXJzKSA9PiB7XG4gICAgICAgICAgICB2YXJzLnRpbWVzdGFtcCA9IHsgLi4udmFycy50aW1lc3RhbXAsIHRvOiBuZXcgRGF0ZSh2KS5nZXRUaW1lKCkgfTtcbiAgICAgICAgICAgIHZhcnMudG9UaW1lc3RhbXAgPSB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBwYWdpbmc6IHtcbiAgICAgICAgaGFzTmV4dFBhZ2U6IFwiaGFzTmV4dFBhZ2VcIixcbiAgICAgICAgY3Vyc29yOiBcImN1cnNvclwiLFxuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNhY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6WyJ0cmFuc2FjdGlvbnMiLCJpZCIsInJlY2VpcHQiLCJkZWFkbGluZUhlaWdodCIsInNpZ25hdHVyZSIsInRpbWVzdGFtcCIsInZlcnNpb24iLCJ0YWdzIiwibmFtZSIsInZhbHVlIiwiYWRkcmVzcyIsInRva2VuIiwidHJhbnNhY3Rpb25WYXJzIiwiaWRzIiwidW5kZWZpbmVkIiwiYWZ0ZXIiLCJmcm9tIiwicGFnZVNpemUiLCJzb3J0IiwiZnJvbVRpbWVzdGFtcCIsInRvVGltZXN0YW1wIiwiaXJ5c1RyYW5zYWN0aW9uc1F1ZXJ5IiwicXVlcnkiLCJlbnVtVmFsdWVzIiwidmFycyIsInJlbWFwVmFycyIsIl9rIiwidiIsIkRhdGUiLCJnZXRUaW1lIiwidG8iLCJwYWdpbmciLCJoYXNOZXh0UGFnZSIsImN1cnNvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/irys/transactions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/query.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/query.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _graphql_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./graphql.js */ \"(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/graphql.js\");\n/* harmony import */ var _queries_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./queries/index.js */ \"(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/queries/index.js\");\n\n\n// import type { ArweaveBlock, ArweaveBlockVars } from \"./queries/arweave/block.js\";\n// import type { ArweaveTransaction, ArweaveTransactionVars } from \"./queries/arweave/transaction.js\";\nclass Query {\n    constructor(opts = {\n        url: new URL(\"https://node1.bundlr.network/graphql\")\n    }){\n        if (!opts.url) throw new Error(\"URL is required\");\n        opts.url = new URL(opts.url);\n        this.opts = opts;\n    }\n    search(queryName, opts) {\n        // const queryInstance =\n        const query = opts?.query ?? _queries_index_js__WEBPACK_IMPORTED_MODULE_1__.queries[queryName];\n        const queryInstance = new _graphql_js__WEBPACK_IMPORTED_MODULE_0__.GraphQLQuery({\n            ...this.opts,\n            query,\n            queryName\n        });\n        // @ts-expect-error overloading\n        return queryInstance;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Query); //# sourceMappingURL=query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGlyeXMrcXVlcnlAMC4wLjFfZGVidWdANC40LjAvbm9kZV9tb2R1bGVzL0BpcnlzL3F1ZXJ5L2J1aWxkL2VzbS9xdWVyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTRDO0FBQ0M7QUFDN0Msb0ZBQW9GO0FBQ3BGLHNHQUFzRztBQUMvRixNQUFNRTtJQUVUQyxZQUFZQyxPQUFPO1FBQUVDLEtBQUssSUFBSUMsSUFBSTtJQUF3QyxDQUFDLENBQUU7UUFDekUsSUFBSSxDQUFDRixLQUFLQyxHQUFHLEVBQ1QsTUFBTSxJQUFJRSxNQUFNO1FBQ3BCSCxLQUFLQyxHQUFHLEdBQUcsSUFBSUMsSUFBSUYsS0FBS0MsR0FBRztRQUMzQixJQUFJLENBQUNELElBQUksR0FBR0E7SUFDaEI7SUFDQUksT0FBT0MsU0FBUyxFQUFFTCxJQUFJLEVBQUU7UUFDcEIsd0JBQXdCO1FBQ3hCLE1BQU1NLFFBQVFOLE1BQU1NLFNBQVNULHNEQUFPLENBQUNRLFVBQVU7UUFDL0MsTUFBTUUsZ0JBQWdCLElBQUlYLHFEQUFZQSxDQUFDO1lBQUUsR0FBRyxJQUFJLENBQUNJLElBQUk7WUFBRU07WUFBT0Q7UUFBVTtRQUN4RSwrQkFBK0I7UUFDL0IsT0FBT0U7SUFDWDtBQUNKO0FBQ0EsaUVBQWVULEtBQUtBLEVBQUMsQ0FDckIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AaXJ5cytxdWVyeUAwLjAuMV9kZWJ1Z0A0LjQuMC9ub2RlX21vZHVsZXMvQGlyeXMvcXVlcnkvYnVpbGQvZXNtL3F1ZXJ5LmpzPzNmZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTFF1ZXJ5IH0gZnJvbSBcIi4vZ3JhcGhxbC5qc1wiO1xuaW1wb3J0IHsgcXVlcmllcyB9IGZyb20gXCIuL3F1ZXJpZXMvaW5kZXguanNcIjtcbi8vIGltcG9ydCB0eXBlIHsgQXJ3ZWF2ZUJsb2NrLCBBcndlYXZlQmxvY2tWYXJzIH0gZnJvbSBcIi4vcXVlcmllcy9hcndlYXZlL2Jsb2NrLmpzXCI7XG4vLyBpbXBvcnQgdHlwZSB7IEFyd2VhdmVUcmFuc2FjdGlvbiwgQXJ3ZWF2ZVRyYW5zYWN0aW9uVmFycyB9IGZyb20gXCIuL3F1ZXJpZXMvYXJ3ZWF2ZS90cmFuc2FjdGlvbi5qc1wiO1xuZXhwb3J0IGNsYXNzIFF1ZXJ5IHtcbiAgICBvcHRzO1xuICAgIGNvbnN0cnVjdG9yKG9wdHMgPSB7IHVybDogbmV3IFVSTChcImh0dHBzOi8vbm9kZTEuYnVuZGxyLm5ldHdvcmsvZ3JhcGhxbFwiKSB9KSB7XG4gICAgICAgIGlmICghb3B0cy51cmwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVUkwgaXMgcmVxdWlyZWRcIik7XG4gICAgICAgIG9wdHMudXJsID0gbmV3IFVSTChvcHRzLnVybCk7XG4gICAgICAgIHRoaXMub3B0cyA9IG9wdHM7XG4gICAgfVxuICAgIHNlYXJjaChxdWVyeU5hbWUsIG9wdHMpIHtcbiAgICAgICAgLy8gY29uc3QgcXVlcnlJbnN0YW5jZSA9XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gb3B0cz8ucXVlcnkgPz8gcXVlcmllc1txdWVyeU5hbWVdO1xuICAgICAgICBjb25zdCBxdWVyeUluc3RhbmNlID0gbmV3IEdyYXBoUUxRdWVyeSh7IC4uLnRoaXMub3B0cywgcXVlcnksIHF1ZXJ5TmFtZSB9KTtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBvdmVybG9hZGluZ1xuICAgICAgICByZXR1cm4gcXVlcnlJbnN0YW5jZTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBRdWVyeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJHcmFwaFFMUXVlcnkiLCJxdWVyaWVzIiwiUXVlcnkiLCJjb25zdHJ1Y3RvciIsIm9wdHMiLCJ1cmwiLCJVUkwiLCJFcnJvciIsInNlYXJjaCIsInF1ZXJ5TmFtZSIsInF1ZXJ5IiwicXVlcnlJbnN0YW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@irys+query@0.0.1_debug@4.4.0/node_modules/@irys/query/build/esm/query.js\n");

/***/ })

};
;