"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@solana+options@2.0.0-rc.1_fastestsmallesttextencoderdecoder@1.0.22_typescript@5.8.3";
exports.ids = ["vendor-chunks/@solana+options@2.0.0-rc.1_fastestsmallesttextencoderdecoder@1.0.22_typescript@5.8.3"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@solana+options@2.0.0-rc.1_fastestsmallesttextencoderdecoder@1.0.22_typescript@5.8.3/node_modules/@solana/options/dist/index.node.cjs":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@solana+options@2.0.0-rc.1_fastestsmallesttextencoderdecoder@1.0.22_typescript@5.8.3/node_modules/@solana/options/dist/index.node.cjs ***!
  \******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar codecsCore = __webpack_require__(/*! @solana/codecs-core */ \"(ssr)/./node_modules/.pnpm/@solana+codecs-core@2.0.0-rc.1_typescript@5.8.3/node_modules/@solana/codecs-core/dist/index.node.cjs\");\nvar codecsDataStructures = __webpack_require__(/*! @solana/codecs-data-structures */ \"(ssr)/./node_modules/.pnpm/@solana+codecs-data-structures@2.0.0-rc.1_typescript@5.8.3/node_modules/@solana/codecs-data-structures/dist/index.node.cjs\");\nvar codecsNumbers = __webpack_require__(/*! @solana/codecs-numbers */ \"(ssr)/./node_modules/.pnpm/@solana+codecs-numbers@2.0.0-rc.1_typescript@5.8.3/node_modules/@solana/codecs-numbers/dist/index.node.cjs\");\n// src/option.ts\nvar some = (value)=>({\n        __option: \"Some\",\n        value\n    });\nvar none = ()=>({\n        __option: \"None\"\n    });\nvar isOption = (input)=>!!(input && typeof input === \"object\" && \"__option\" in input && (input.__option === \"Some\" && \"value\" in input || input.__option === \"None\"));\nvar isSome = (option)=>option.__option === \"Some\";\nvar isNone = (option)=>option.__option === \"None\";\n// src/unwrap-option.ts\nfunction unwrapOption(option, fallback) {\n    if (isSome(option)) return option.value;\n    return fallback ? fallback() : null;\n}\nvar wrapNullable = (nullable)=>nullable !== null ? some(nullable) : none();\n// src/option-codec.ts\nfunction getOptionEncoder(item, config = {}) {\n    const prefix = (()=>{\n        if (config.prefix === null) {\n            return codecsCore.transformEncoder(codecsDataStructures.getUnitEncoder(), (_boolean)=>void 0);\n        }\n        return codecsDataStructures.getBooleanEncoder({\n            size: config.prefix ?? codecsNumbers.getU8Encoder()\n        });\n    })();\n    const noneValue = (()=>{\n        if (config.noneValue === \"zeroes\") {\n            codecsCore.assertIsFixedSize(item);\n            return codecsCore.fixEncoderSize(codecsDataStructures.getUnitEncoder(), item.fixedSize);\n        }\n        if (!config.noneValue) {\n            return codecsDataStructures.getUnitEncoder();\n        }\n        return codecsDataStructures.getConstantEncoder(config.noneValue);\n    })();\n    return codecsDataStructures.getUnionEncoder([\n        codecsCore.transformEncoder(codecsDataStructures.getTupleEncoder([\n            prefix,\n            noneValue\n        ]), (_value)=>[\n                false,\n                void 0\n            ]),\n        codecsCore.transformEncoder(codecsDataStructures.getTupleEncoder([\n            prefix,\n            item\n        ]), (value)=>[\n                true,\n                isOption(value) && isSome(value) ? value.value : value\n            ])\n    ], (variant)=>{\n        const option = isOption(variant) ? variant : wrapNullable(variant);\n        return Number(isSome(option));\n    });\n}\nfunction getOptionDecoder(item, config = {}) {\n    const prefix = (()=>{\n        if (config.prefix === null) {\n            return codecsCore.transformDecoder(codecsDataStructures.getUnitDecoder(), ()=>false);\n        }\n        return codecsDataStructures.getBooleanDecoder({\n            size: config.prefix ?? codecsNumbers.getU8Decoder()\n        });\n    })();\n    const noneValue = (()=>{\n        if (config.noneValue === \"zeroes\") {\n            codecsCore.assertIsFixedSize(item);\n            return codecsCore.fixDecoderSize(codecsDataStructures.getUnitDecoder(), item.fixedSize);\n        }\n        if (!config.noneValue) {\n            return codecsDataStructures.getUnitDecoder();\n        }\n        return codecsDataStructures.getConstantDecoder(config.noneValue);\n    })();\n    return codecsDataStructures.getUnionDecoder([\n        codecsCore.transformDecoder(codecsDataStructures.getTupleDecoder([\n            prefix,\n            noneValue\n        ]), ()=>none()),\n        codecsCore.transformDecoder(codecsDataStructures.getTupleDecoder([\n            prefix,\n            item\n        ]), ([, value])=>some(value))\n    ], (bytes, offset)=>{\n        if (config.prefix === null && !config.noneValue) {\n            return Number(offset < bytes.length);\n        }\n        if (config.prefix === null && config.noneValue != null) {\n            const zeroValue = config.noneValue === \"zeroes\" ? new Uint8Array(noneValue.fixedSize).fill(0) : config.noneValue;\n            return codecsCore.containsBytes(bytes, zeroValue, offset) ? 0 : 1;\n        }\n        return Number(prefix.read(bytes, offset)[0]);\n    });\n}\nfunction getOptionCodec(item, config = {}) {\n    return codecsCore.combineCodec(getOptionEncoder(item, config), getOptionDecoder(item, config));\n}\n// src/unwrap-option-recursively.ts\nfunction unwrapOptionRecursively(input, fallback) {\n    if (!input || ArrayBuffer.isView(input)) {\n        return input;\n    }\n    const next = (x)=>fallback ? unwrapOptionRecursively(x, fallback) : unwrapOptionRecursively(x);\n    if (isOption(input)) {\n        if (isSome(input)) return next(input.value);\n        return fallback ? fallback() : null;\n    }\n    if (Array.isArray(input)) {\n        return input.map(next);\n    }\n    if (typeof input === \"object\") {\n        return Object.fromEntries(Object.entries(input).map(([k, v])=>[\n                k,\n                next(v)\n            ]));\n    }\n    return input;\n}\nexports.getOptionCodec = getOptionCodec;\nexports.getOptionDecoder = getOptionDecoder;\nexports.getOptionEncoder = getOptionEncoder;\nexports.isNone = isNone;\nexports.isOption = isOption;\nexports.isSome = isSome;\nexports.none = none;\nexports.some = some;\nexports.unwrapOption = unwrapOption;\nexports.unwrapOptionRecursively = unwrapOptionRecursively;\nexports.wrapNullable = wrapNullable; //# sourceMappingURL=index.node.cjs.map\n //# sourceMappingURL=index.node.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@solana+options@2.0.0-rc.1_fastestsmallesttextencoderdecoder@1.0.22_typescript@5.8.3/node_modules/@solana/options/dist/index.node.cjs\n");

/***/ })

};
;