"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/vlq@2.0.4";
exports.ids = ["vendor-chunks/vlq@2.0.4"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/vlq@2.0.4/node_modules/vlq/src/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/.pnpm/vlq@2.0.4/node_modules/vlq/src/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/** @type {Record<string, number>} */ let char_to_integer = {};\n/** @type {Record<number, string>} */ let integer_to_char = {};\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".split(\"\").forEach(function(char, i) {\n    char_to_integer[char] = i;\n    integer_to_char[i] = char;\n});\n/** @param {string} string */ function decode(string) {\n    /** @type {number[]} */ let result = [];\n    let shift = 0;\n    let value = 0;\n    for(let i = 0; i < string.length; i += 1){\n        let integer = char_to_integer[string[i]];\n        if (integer === undefined) {\n            throw new Error(\"Invalid character (\" + string[i] + \")\");\n        }\n        const has_continuation_bit = integer & 32;\n        integer &= 31;\n        value += integer << shift;\n        if (has_continuation_bit) {\n            shift += 5;\n        } else {\n            const should_negate = value & 1;\n            value >>>= 1;\n            if (should_negate) {\n                result.push(value === 0 ? -0x80000000 : -value);\n            } else {\n                result.push(value);\n            }\n            // reset\n            value = shift = 0;\n        }\n    }\n    return result;\n}\n/** @param {number | number[]} value */ function encode(value) {\n    if (typeof value === \"number\") {\n        return encode_integer(value);\n    }\n    let result = \"\";\n    for(let i = 0; i < value.length; i += 1){\n        result += encode_integer(value[i]);\n    }\n    return result;\n}\n/** @param {number} num */ function encode_integer(num) {\n    let result = \"\";\n    if (num < 0) {\n        num = -num << 1 | 1;\n    } else {\n        num <<= 1;\n    }\n    do {\n        let clamped = num & 31;\n        num >>>= 5;\n        if (num > 0) {\n            clamped |= 32;\n        }\n        result += integer_to_char[clamped];\n    }while (num > 0);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vdmxxQDIuMC40L25vZGVfbW9kdWxlcy92bHEvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsbUNBQW1DLEdBQ25DLElBQUlBLGtCQUFrQixDQUFDO0FBRXZCLG1DQUFtQyxHQUNuQyxJQUFJQyxrQkFBa0IsQ0FBQztBQUV2QixvRUFDRUMsS0FBSyxDQUFDLElBQ05DLE9BQU8sQ0FBQyxTQUFVQyxJQUFJLEVBQUVDLENBQUM7SUFDekJMLGVBQWUsQ0FBQ0ksS0FBSyxHQUFHQztJQUN4QkosZUFBZSxDQUFDSSxFQUFFLEdBQUdEO0FBQ3RCO0FBRUQsMkJBQTJCLEdBQ3BCLFNBQVNFLE9BQU9DLE1BQU07SUFDNUIscUJBQXFCLEdBQ3JCLElBQUlDLFNBQVMsRUFBRTtJQUVmLElBQUlDLFFBQVE7SUFDWixJQUFJQyxRQUFRO0lBRVosSUFBSyxJQUFJTCxJQUFJLEdBQUdBLElBQUlFLE9BQU9JLE1BQU0sRUFBRU4sS0FBSyxFQUFHO1FBQzFDLElBQUlPLFVBQVVaLGVBQWUsQ0FBQ08sTUFBTSxDQUFDRixFQUFFLENBQUM7UUFFeEMsSUFBSU8sWUFBWUMsV0FBVztZQUMxQixNQUFNLElBQUlDLE1BQU0sd0JBQXdCUCxNQUFNLENBQUNGLEVBQUUsR0FBRztRQUNyRDtRQUVBLE1BQU1VLHVCQUF1QkgsVUFBVTtRQUV2Q0EsV0FBVztRQUNYRixTQUFTRSxXQUFXSDtRQUVwQixJQUFJTSxzQkFBc0I7WUFDekJOLFNBQVM7UUFDVixPQUFPO1lBQ04sTUFBTU8sZ0JBQWdCTixRQUFRO1lBQzlCQSxXQUFXO1lBRVgsSUFBSU0sZUFBZTtnQkFDbEJSLE9BQU9TLElBQUksQ0FBQ1AsVUFBVSxJQUFJLENBQUMsYUFBYSxDQUFDQTtZQUMxQyxPQUFPO2dCQUNORixPQUFPUyxJQUFJLENBQUNQO1lBQ2I7WUFFQSxRQUFRO1lBQ1JBLFFBQVFELFFBQVE7UUFDakI7SUFDRDtJQUVBLE9BQU9EO0FBQ1I7QUFFQSxxQ0FBcUMsR0FDOUIsU0FBU1UsT0FBT1IsS0FBSztJQUMzQixJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUM5QixPQUFPUyxlQUFlVDtJQUN2QjtJQUVBLElBQUlGLFNBQVM7SUFDYixJQUFLLElBQUlILElBQUksR0FBR0EsSUFBSUssTUFBTUMsTUFBTSxFQUFFTixLQUFLLEVBQUc7UUFDekNHLFVBQVVXLGVBQWVULEtBQUssQ0FBQ0wsRUFBRTtJQUNsQztJQUVBLE9BQU9HO0FBQ1I7QUFFQSx3QkFBd0IsR0FDeEIsU0FBU1csZUFBZUMsR0FBRztJQUMxQixJQUFJWixTQUFTO0lBRWIsSUFBSVksTUFBTSxHQUFHO1FBQ1pBLE1BQU0sQ0FBRUEsT0FBTyxJQUFLO0lBQ3JCLE9BQU87UUFDTkEsUUFBUTtJQUNUO0lBRUEsR0FBRztRQUNGLElBQUlDLFVBQVVELE1BQU07UUFDcEJBLFNBQVM7UUFFVCxJQUFJQSxNQUFNLEdBQUc7WUFDWkMsV0FBVztRQUNaO1FBRUFiLFVBQVVQLGVBQWUsQ0FBQ29CLFFBQVE7SUFDbkMsUUFBU0QsTUFBTSxHQUFHO0lBRWxCLE9BQU9aO0FBQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL3ZscUAyLjAuNC9ub2RlX21vZHVsZXMvdmxxL3NyYy9pbmRleC5qcz82NWFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBAdHlwZSB7UmVjb3JkPHN0cmluZywgbnVtYmVyPn0gKi9cbmxldCBjaGFyX3RvX2ludGVnZXIgPSB7fTtcblxuLyoqIEB0eXBlIHtSZWNvcmQ8bnVtYmVyLCBzdHJpbmc+fSAqL1xubGV0IGludGVnZXJfdG9fY2hhciA9IHt9O1xuXG4nQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nXG5cdC5zcGxpdCgnJylcblx0LmZvckVhY2goZnVuY3Rpb24gKGNoYXIsIGkpIHtcblx0XHRjaGFyX3RvX2ludGVnZXJbY2hhcl0gPSBpO1xuXHRcdGludGVnZXJfdG9fY2hhcltpXSA9IGNoYXI7XG5cdH0pO1xuXG4vKiogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZShzdHJpbmcpIHtcblx0LyoqIEB0eXBlIHtudW1iZXJbXX0gKi9cblx0bGV0IHJlc3VsdCA9IFtdO1xuXG5cdGxldCBzaGlmdCA9IDA7XG5cdGxldCB2YWx1ZSA9IDA7XG5cblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBzdHJpbmcubGVuZ3RoOyBpICs9IDEpIHtcblx0XHRsZXQgaW50ZWdlciA9IGNoYXJfdG9faW50ZWdlcltzdHJpbmdbaV1dO1xuXG5cdFx0aWYgKGludGVnZXIgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNoYXJhY3RlciAoJyArIHN0cmluZ1tpXSArICcpJyk7XG5cdFx0fVxuXG5cdFx0Y29uc3QgaGFzX2NvbnRpbnVhdGlvbl9iaXQgPSBpbnRlZ2VyICYgMzI7XG5cblx0XHRpbnRlZ2VyICY9IDMxO1xuXHRcdHZhbHVlICs9IGludGVnZXIgPDwgc2hpZnQ7XG5cblx0XHRpZiAoaGFzX2NvbnRpbnVhdGlvbl9iaXQpIHtcblx0XHRcdHNoaWZ0ICs9IDU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnN0IHNob3VsZF9uZWdhdGUgPSB2YWx1ZSAmIDE7XG5cdFx0XHR2YWx1ZSA+Pj49IDE7XG5cblx0XHRcdGlmIChzaG91bGRfbmVnYXRlKSB7XG5cdFx0XHRcdHJlc3VsdC5wdXNoKHZhbHVlID09PSAwID8gLTB4ODAwMDAwMDAgOiAtdmFsdWUpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmVzdWx0LnB1c2godmFsdWUpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyByZXNldFxuXHRcdFx0dmFsdWUgPSBzaGlmdCA9IDA7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqIEBwYXJhbSB7bnVtYmVyIHwgbnVtYmVyW119IHZhbHVlICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKHZhbHVlKSB7XG5cdGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG5cdFx0cmV0dXJuIGVuY29kZV9pbnRlZ2VyKHZhbHVlKTtcblx0fVxuXG5cdGxldCByZXN1bHQgPSAnJztcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkgKz0gMSkge1xuXHRcdHJlc3VsdCArPSBlbmNvZGVfaW50ZWdlcih2YWx1ZVtpXSk7XG5cdH1cblxuXHRyZXR1cm4gcmVzdWx0O1xufVxuXG4vKiogQHBhcmFtIHtudW1iZXJ9IG51bSAqL1xuZnVuY3Rpb24gZW5jb2RlX2ludGVnZXIobnVtKSB7XG5cdGxldCByZXN1bHQgPSAnJztcblxuXHRpZiAobnVtIDwgMCkge1xuXHRcdG51bSA9ICgtbnVtIDw8IDEpIHwgMTtcblx0fSBlbHNlIHtcblx0XHRudW0gPDw9IDE7XG5cdH1cblxuXHRkbyB7XG5cdFx0bGV0IGNsYW1wZWQgPSBudW0gJiAzMTtcblx0XHRudW0gPj4+PSA1O1xuXG5cdFx0aWYgKG51bSA+IDApIHtcblx0XHRcdGNsYW1wZWQgfD0gMzI7XG5cdFx0fVxuXG5cdFx0cmVzdWx0ICs9IGludGVnZXJfdG9fY2hhcltjbGFtcGVkXTtcblx0fSB3aGlsZSAobnVtID4gMCk7XG5cblx0cmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6WyJjaGFyX3RvX2ludGVnZXIiLCJpbnRlZ2VyX3RvX2NoYXIiLCJzcGxpdCIsImZvckVhY2giLCJjaGFyIiwiaSIsImRlY29kZSIsInN0cmluZyIsInJlc3VsdCIsInNoaWZ0IiwidmFsdWUiLCJsZW5ndGgiLCJpbnRlZ2VyIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJoYXNfY29udGludWF0aW9uX2JpdCIsInNob3VsZF9uZWdhdGUiLCJwdXNoIiwiZW5jb2RlIiwiZW5jb2RlX2ludGVnZXIiLCJudW0iLCJjbGFtcGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/vlq@2.0.4/node_modules/vlq/src/index.js\n");

/***/ })

};
;